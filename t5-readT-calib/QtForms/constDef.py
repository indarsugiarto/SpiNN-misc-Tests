"""
SYNOPSYS
    Constant values for global definition.

Created on 2 Nov 2015
@author: indar.sugiarto@manchester.ac.uk
"""

from PyQt4 import Qt


#default port (usually)
HOST = '192.168.240.253'
SEND_PORT = 17893	# the default port for sending sdp to SpiNNaker
TUBO_PORT = 17892	# Tubotron normally uses this port

#port for streaming data from SpiNNaker
RECV_PORT = 20001	# previously: 17899
REPORT_IPTAG = 3 	# SpiNNaker profiler program uses this tag number, optional
SPINN_SDP_PORT = 7	# SpiNNaker profiler program uses this port number for comm with host
PROFILER_CORE = 17

#port for streaming data from Raspberry pi
RASPI_ADDR = '192.168.123.1' # the Pi3 has been set as a adhoc network ("pi-adhoc")
RASPI_PORT = 30001

"""
TEMP1_OFFSET = 6250
TEMP1_GRAD = -4.9
TEMP2_OFFSET = 9102
TEMP2_GRAD = 21.92
"""
TEMP1_GRAD   = [-23.83, -21.18, -21.27, -22.52]  #Evangelos: -4.9, Patrick: -5.85
TEMP1_OFFSET = [7307.61, 7421.88, 7046.29, 7754.77]     #Evangelos: 6250
TEMP2_GRAD   = [73.25, 60.85, 64.64, 63.21]  #Evangelos: 21.92, Patrick: 22.45
TEMP2_OFFSET = [6861.84, 7408.09, 7049.93, 7681.19]     #Evangelos: 9102
MAX_T_SCALE_Y_DEG = 100
MIN_T_SCALE_Y_DEG = 20
MIN_T_SCALE_Y_INT = 4000
MAX_T_SCALE_Y_INT = 12000

MAX_U_SCALE_AT_250 = 36330  # if I change priority level, I can get also 38050
MAX_U_SCALE_AT_10 = 1480    # again, different priority level will produce different value, eg. 1550

MAX_F_SCALE = 260
MIN_F_SCALE = 0

"""
For the regression, I use the result demonstrated in:
~/Projects/SpiNN/graceful/p9-Profiler/analisaTempSpin3/threeMeas:

Linear regression: y = p1*z + p2
Cubic regression:  y = p1*z^3 + p2*z^2 + p3*z + p4

where z = (x-mu)/sigma

Using ptDemo
==============
For chip <0,0> with Freq = 200MHz:
-----------------
S0 --> p1=-2.4739262002895894, p2=42.6071661237784767, mu=6292.6758957654719779, sigma=13.0375604495339417
S1 --> p1=2.4845535037148543, p2=42.6071661237786969, mu=9947.3322475570039387, sigma=58.2653017310028076
S2 --> p1=0.0102739203491824, p2=0.2548620489210029, p3=-1.9927577967270746, p4=42.3749844641021696, mu=7262.2263843648206603, sigma=827.3091639434551325

For chip <1,0> with Freq = 200MHz:
-----------------
S0 --> p1=-2.4273529098453857, p2=39.4510048859938820, mu=6117.4902280130290819, sigma=13.4581364904127820
S1 --> p1=2.4361371876889755, p2=39.4510048859934201, mu=9847.3013029315952735, sigma=58.8937614434833137
S2 --> p1=0.0128334128754970, p2=0.2257893399517821, p3=-2.0371983956751851, p4=39.2528036990930786, mu=9702.7491856677515898, sigma=1177.9667522697072854

For chip <1,1> with Freq = 200MHz:
-----------------
S0 --> p1=-2.4652070356891391, p2=38.0428094462541395, mu=6776.0895765472314451, sigma=16.8264373516095169
S1 --> p1=2.4692152264562743, p2=38.0428094462541395, mu=10408.1905537459279003, sigma=65.6294743548766775
S2 --> p1=-0.0047501255078911, p2=0.1638472936749849, p3=-2.0684341853325279, p4=37.8688585322044275, mu=9809.0146579804568319, sigma=1298.6197861143059527

For chip <0,1> with Freq = 200MHz:
-----------------
S0 --> p1=-2.1561553427614917, p2=37.1117410423454501, mu=6499.6693811074919722, sigma=15.2105336324764835
S1 --> p1=2.1592936370205713, p2=37.1117410423452654, mu=10040.1351791530942137, sigma=60.4470266801461165
S2 --> p1=0.0170863436721950, p2=0.1846719070380981, p3=-1.8697996787147089, p4=36.9660941615939507, mu=10304.3534201954389573, sigma=1269.5148835889481234


Using worseC
=============
For chip <0,0> with Freq = 200MHz:
-----------------
S0 --> p1=-2.6531174722709725, p2=42.2919685204618503, mu=6294.2528856243443443, sigma=14.2556215715522505
S1 --> p1=2.6593578383481411, p2=42.2919685204617721, mu=9946.4270724029374833, sigma=62.7559731457872871
S2 --> p1=-0.0104978294262651, p2=0.2067465742391024, p3=-1.9603511505492417, p4=42.0566721711035996, mu=7390.3788037775448174, sigma=864.5992199793525970

For chip <1,0> with Freq = 200MHz:
-----------------
S0 --> p1=-2.5511748470557971, p2=39.0408111227704993, mu=6119.3557187827909729, sigma=14.1368020276119033
S1 --> p1=2.5554104501479387, p2=39.0408111227701298, mu=9841.5141657922358718, sigma=61.4017632671313009
S2 --> p1=-0.0054646136243426, p2=0.1622946224546173, p3=-2.0380724411039393, p4=38.8636659233852981, mu=9900.5771248688361084, sigma=1190.0556235593569454

For chip <1,1> with Freq = 200MHz:
-----------------
S0 --> p1=-2.5117796281669791, p2=37.6445571878275800, mu=6779.0146904512066612, sigma=17.5542315259928650
S1 --> p1=2.5138606223716309, p2=37.6445571878277505, mu=10401.4973767051415052, sigma=67.2259472734193224
S2 --> p1=-0.0141751024747096, p2=0.1481957798699146, p3=-1.9369409217478462, p4=37.4571406280896255, mu=10077.3809024134316132, sigma=1293.9544547708987920

For chip <0,1> with Freq = 200MHz:
-----------------
S0 --> p1=-2.2431078368824720, p2=36.8058908709337587, mu=6502.1636935991609789, sigma=15.8698906221751592
S1 --> p1=2.2458086894395870, p2=36.8058908709337942, mu=10036.9233997901355906, sigma=63.0478127239131112
S2 --> p1=0.0037532758460196, p2=0.2123606783775007, p3=-1.6699020429757041, p4=36.6043675438343570, mu=10498.5981112277022476, sigma=1286.4875896633345747
 
Note: Sebelumnya hasil regresi untuk Chip <1,1> dan Chip <0,1> doesn't make sense (sepertinya terbalik, karena hasilnya
salah) makanya data di atas aku balik untuk Chip <1,1> dengan Chip <0,1>

Alternatively, we can use regression coefficient generated by a MATLAB script in the experiment folder. Just copy and 
paste the resulting .reg file here (and rename the variable accordingly). For example, the regCoef3 here is generated
by the MATLAB script.

"""
# Using ptDemo:
regCoef1 = [[[-2.4739262002895894, 42.6071661237784767, 6292.6758957654719779, 13.0375604495339417],
[2.4845535037148543, 42.6071661237786969, 9947.3322475570039387, 58.2653017310028076],
[0.0102739203491824, 0.2548620489210029, -1.9927577967270746, 42.3749844641021696, 7262.2263843648206603, 827.3091639434551325]],
[[-2.4273529098453857, 39.4510048859938820, 6117.4902280130290819, 13.4581364904127820],
[2.4361371876889755, 39.4510048859934201, 9847.3013029315952735, 58.8937614434833137],
[0.0128334128754970, 0.2257893399517821, -2.0371983956751851, 39.2528036990930786, 9702.7491856677515898, 1177.9667522697072854]],
[[-2.1561553427614917, 37.1117410423454501, 6499.6693811074919722, 15.2105336324764835],
[2.1592936370205713, 37.1117410423452654, 10040.1351791530942137, 60.4470266801461165],
[0.0170863436721950, 0.1846719070380981, -1.8697996787147089, 36.9660941615939507, 10304.3534201954389573, 1269.5148835889481234]],
[[-2.4652070356891391, 38.0428094462541395, 6776.0895765472314451, 16.8264373516095169],
[2.4692152264562743, 38.0428094462541395, 10408.1905537459279003, 65.6294743548766775],
[-0.0047501255078911, 0.1638472936749849, -2.0684341853325279, 37.8688585322044275, 9809.0146579804568319, 1298.6197861143059527]]
];

# Using worseC
regCoef2 = [[[-2.6531174722709725, 42.2919685204618503, 6294.2528856243443443, 14.2556215715522505],
[2.6593578383481411, 42.2919685204617721, 9946.4270724029374833, 62.7559731457872871],
[-0.0104978294262651, 0.2067465742391024, -1.9603511505492417, 42.0566721711035996, 7390.3788037775448174, 864.5992199793525970]],
[[-2.5511748470557971, 39.0408111227704993, 6119.3557187827909729, 14.1368020276119033],
[2.5554104501479387, 39.0408111227701298, 9841.5141657922358718, 61.4017632671313009],
[-0.0054646136243426, 0.1622946224546173, -2.0380724411039393, 38.8636659233852981, 9900.5771248688361084, 1190.0556235593569454]],
[[-2.2431078368824720, 36.8058908709337587, 6502.1636935991609789, 15.8698906221751592],
[2.2458086894395870, 36.8058908709337942, 10036.9233997901355906, 63.0478127239131112],
[0.0037532758460196, 0.2123606783775007, -1.6699020429757041, 36.6043675438343570, 10498.5981112277022476, 1286.4875896633345747]],
[[-2.5117796281669791, 37.6445571878275800, 6779.0146904512066612, 17.5542315259928650],
[2.5138606223716309, 37.6445571878277505, 10401.4973767051415052, 67.2259472734193224],
[-0.0141751024747096, 0.1481957798699146, -1.9369409217478462, 37.4571406280896255, 10077.3809024134316132, 1293.9544547708987920]]];

# Using experiment on Tuesday, 28 February 2017, 13:56
# The following data is copied from the MATLAB-generated regression coefficient:
regCoef3 = [[[-5.653730, 49.735660, 6122.280178, 220.727814],
[6.538217, 49.735660, 10480.087606, 610.975818],
[-0.352222, 2.389128, -9.257577, 47.768628, 4912.135244, 2813.061969]],
[[-5.588882, 47.380537, 5943.352039, 222.964395],
[6.423523, 47.380537, 10385.116270, 618.201994],
[-0.319137, 2.125303, -8.922037, 45.594551, 6518.740008, 3767.207430]],
[[-4.737709, 43.407949, 6312.833670, 236.830829],
[5.392405, 43.407949, 10581.910375, 617.655847],
[-0.267238, 1.762617, -7.322483, 41.913838, 6782.597901, 3925.164153]],
[[-5.232014, 44.860351, 6585.580945, 243.260153],
[5.923378, 44.860351, 10945.630198, 621.112483],
[-0.330129, 2.057306, -8.041973, 43.127229, 6639.769075, 3877.857287]]];

# Select, which experiment data will be used:
regCoef = regCoef1


######################### GUI parameters ########################
PEN_WIDTH = 2


######################### Other stuffs ##########################
LOG_DIR = "./experiments/"

## Color contants for plotting
clr = [Qt.Qt.red, Qt.Qt.green, Qt.Qt.blue, Qt.Qt.cyan, Qt.Qt.magenta, Qt.Qt.yellow, Qt.Qt.black]

